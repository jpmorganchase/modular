// given a path, generate a map like { name: () => import(name) }

const fs = require('fs');

function toPascalCase(str) {
  return str
    .replace(new RegExp(/[-_]+/, 'g'), ' ')
    .replace(new RegExp(/[^\w\s]/, 'g'), '')
    .replace(
      new RegExp(/\s+(.)(\w+)/, 'g'),
      ($1, $2, $3) => `${$2.toUpperCase() + $3.toLowerCase()}`,
    )
    .replace(new RegExp(/\s/, 'g'), '')
    .replace(new RegExp(/\w/), (s) => s.toUpperCase());
}
// https://stackoverflow.com/questions/4068573/convert-string-to-pascal-case-aka-uppercamelcase-in-javascript
// because I was lazy

module.exports = function scriptContent(dir) {
  const dirs = fs
    .readdirSync(dir, { withFileTypes: true })
    .filter((entry) => entry.isDirectory());
  // todo - read from meta.json inside these folders and filter out those which aren't ready to be published yet
  return `// DO NOT EDIT THIS FILE.
${dirs.length > 0 ? `import {lazy} from 'react';` : ''}
export default {
  ${dirs
    .map(
      (dir) =>
        `'${toPascalCase(dir.name)}': lazy(() => import('${toPascalCase(
          dir.name,
        )}'))`,
    )
    .join(',\n  ')}
}
`;
};
