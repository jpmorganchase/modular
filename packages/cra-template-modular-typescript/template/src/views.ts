// DO NOT EDIT THIS FILE.
import { LazyExoticComponent, ComponentType } from 'react';
import codegen from 'codegen.macro';

interface ViewMap<T = unknown> {
  [packageName: string]: LazyExoticComponent<ComponentType<T>>;
}

/* eslint-disable @typescript-eslint/no-unsafe-return */
function getViewMap(): ViewMap {
  // We inlined a require into a function since otherwise Webpack was optimizing out the unused import.
  // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-var-requires
  const { lazy } = require('react');

  // This defines the `viewMap`.
  codegen`
  const path = require('path');
  const { getModularRoot, generateViewMap } = require('modular-scripts');

  const viewMap = generateViewMap(
    path.join(getModularRoot(), 'packages')
  );
  
  module.exports = 'const viewMap = ' + viewMap + ';';
  `;

  // eslint-disable-next-line @typescript-eslint/ban-ts-comment,
  // @ts-ignore
  return viewMap;
}
/* eslint-enable @typescript-eslint/no-unsafe-return */

// Given a directory of views, generate and export a views map, like:
//
// export default {
//   'package-name': lazy(() => import('package-name'))
// }
export default getViewMap();
